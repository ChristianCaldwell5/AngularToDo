{"version":3,"sources":["./src/app/home/home.component.html","./src/app/home/home.component.ts","./src/environments/environment.ts","./src/app/services/session.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/services/firebase.service.ts","./src/app/app.module.ts","./src/app/list/list.component.html","./src/app/list/list.component.ts","./src/app/components/progress-bar/progress-bar.component.html","./src/app/components/progress-bar/progress-bar.component.ts","./src/app/app-routing.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["<!-- Modal -->\n<div #modal class=\"arsenal-modal-container\">\n    <div class=\"arsenal-modal\">\n        <div class=\"arsenal-header-wrap\">\n            <h1 class=\"heading--large\">Create List</h1>\n            <span (click)=\"cancelCreate()\" class=\"material-icons arsenal-button--right a-fs--4em\">clear</span>\n            <label class=\"arsenal-label a-mt--20\">Name</label>\n            <input class=\"arsenal-full-input\"\n                    type=\"text\"\n                    [(ngModel)]=\"newListName\"\n                    placeholder=\"\">\n            <p *ngIf=\"errors.listName\" class=\"arsenal-para--error a-mt--20\">{{errors.listName}}</p>\n            <button (click)='finishCreate(user, newListName)' class=\"arsenal-button--primary a-mt--20\">Create</button>\n        </div>\n    </div>\n</div>\n\n<!-- Main view -->\n<div class=\"arsenal-content a-mt--50\">\n    <!-- <div class=\"arsenal-flex-container\">\n        <div id=\"recommended-wrapper\">\n            <div class=\"dashboard-card\">\n                <h1 class=\"heading--large\">Dashboard</h1>\n            </div>\n        </div>\n        <div id=\"profile-wrapper\">\n            <div class=\"dashboard-card\">\n                <h1 class=\"heading--large\">Profile</h1>\n            </div>\n        </div>\n    </div> -->\n    <!-- Show List -->\n    <div class=\"list-section\">\n        <div class=\"list-section-title\">\n            <h1 class=\"heading--medium\">Your List</h1>\n        </div>\n        <div class=\"list-container a-mt--15\">\n            <ng-container *ngFor=\"let list of lists; let i = index\">\n                <div class=\"list-card\" (click)=\"viewList(i)\">\n                    <div class=\"list-header\">\n                        <p class=\"heading--small\">{{list.name}}</p>\n                        <span class=\"material-icons list-add-icon\">add_circle</span>\n                    </div>\n                    <!-- No Items -->\n                    <p *ngIf='list.items.length == 0' class=\"list-peek a-mt--15\">No items in this list right now.</p>\n                    <p *ngIf='list.items.length == 0' class=\"a-mt--15\">Click this card to add a task!</p>\n                    <!-- Has Items -->\n                    <p *ngIf='list.items.length != 0' class=\"list-peek a-mt--15 a-mb--15\">Next up: {{list.items[0].name}}</p>\n                    <app-progress-bar *ngIf='list.items.length != 0' [stages]=\"list.items\"></app-progress-bar>\n                </div>\n            </ng-container>\n            <div class=\"list-card list-card--add\" (click)=\"createListModal()\">\n                <div class=\"list-add--row\">\n                    <div class=\"arsenal-divider\"></div>\n                    <span class=\"material-icons list-add--icon\">add_circle</span>\n                    <div class=\"arsenal-divider\"></div>\n                </div>\n                <p>New List</p>\n            </div>\n        </div>\n    </div>\n</div>\n","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { FirebaseService } from '../services/firebase.service';\nimport { SessionService } from '../services/session.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  @ViewChild('modal') modal: ElementRef;\n\n  public user;\n  public lists: Array<any>;\n\n  public newListName: string = '';\n\n  public errors = {\n    listName: ''\n  }\n\n  constructor(\n    private firebaseService: FirebaseService,\n    private sessionService: SessionService,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n    this.user = this.sessionService.getUser();\n    this.lists = this.user.lists;\n  }\n\n  public viewList(listLocation: number) {\n    this.sessionService.setSelectedIndex(listLocation);\n    this.sessionService.setSelectedList(this.lists[listLocation]);\n    this.router.navigateByUrl('/list');\n  }\n\n  public createListModal() {\n    this.modal.nativeElement.style.display = 'flex';\n  }\n\n  public cancelCreate() {\n    this.modal.nativeElement.style.display = 'none';\n    this.errors.listName = '';\n  }\n\n  public finishCreate(user, newListName) {\n    // add item to lists\n    if (this.firebaseService.addList(user, newListName)) {\n      this.errors.listName = '';\n      // update session user and list\n      this.user = this.sessionService.getUser();\n      this.lists = this.user.lists;\n      // view list\n      this.router.navigateByUrl('/list');\n    } else {\n      this.errors.listName = 'It looks like a list with this name already exists.'\n    }\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  firebase: {\n    apiKey: \"AIzaSyC-Ji7xLyBxb-b9xsdzV0Vay-qodqAPXg8\",\n    authDomain: \"angulartodo-21638.firebaseapp.com\",\n    projectId: \"angulartodo-21638\",\n    storageBucket: \"angulartodo-21638.appspot.com\",\n    messagingSenderId: \"13677214906\",\n    appId: \"1:13677214906:web:c9bee37b9beb504faf9683\"\n  }\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\nimport { CookieService } from 'ngx-cookie-service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SessionService {\n\n  private activeUser = {\n    username: \"\",\n    id: \"\",\n    lists: [],\n    selectedList: {},\n    selectedIndex: 0\n  };\n\n  constructor(\n    private cookieService: CookieService\n  ) { }\n\n  public getUser(): object {\n    if (!this.activeUser.username) {\n      this.activeUser = JSON.parse(sessionStorage.getItem(\"user\"));\n    }\n    return this.activeUser;\n  }\n\n  public setUser(user): void {\n    this.activeUser.username = user.username;\n    this.activeUser.id = user.id;\n    this.activeUser.lists = user.lists;\n    sessionStorage.setItem(\"user\", JSON.stringify(this.activeUser))\n    // this.cookieService.set('user', JSON.stringify(this.activeUser));\n  }\n\n  public updateLists(item): void {\n    this.activeUser.lists = this.activeUser.lists.concat(item);\n    sessionStorage.setItem(\"user\", JSON.stringify(this.activeUser))\n    // this.cookieService.set('user', JSON.stringify(this.activeUser));\n  }\n\n  public setSelectedIndex(index): void {\n    this.activeUser.selectedIndex = index;\n  }\n\n  public getSelectedIndex(): number {\n    return this.activeUser.selectedIndex;\n  }\n\n  public setSelectedList(list): void {\n    this.activeUser.selectedList = list;\n  }\n\n  public getSelectedList(): object {\n    return this.activeUser.selectedList;\n  }\n\n  public updateSeledtedList(lists, selectdIndex) {\n    this.activeUser.lists = lists;\n    this.activeUser.selectedList = this.activeUser.lists[selectdIndex];\n    sessionStorage.setItem(\"user\", JSON.stringify(this.activeUser))\n    // this.cookieService.set('user', JSON.stringify(this.activeUser));\n  }\n\n  public unsetSelectedList(): void {\n    this.activeUser.selectedList = {}\n  }\n\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'AngularToDo';\n}\n","<router-outlet></router-outlet>\n","import { Injectable } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/firestore';\nimport { Observable, Subject } from 'rxjs';\nimport firebase from 'firebase/app';\nimport { SessionService } from '../services/session.service';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class FirebaseService {\n\n    public hashedPass: string;\n    \n    constructor (\n        public firestore: AngularFirestore,\n        public sessionService: SessionService\n    ) {}\n\n    public async checkUsernameAvailability(newUsername) {\n        let available = false;\n        const usernameRef = this.firestore.collection('usernameLookup').doc(newUsername);\n        \n        return await usernameRef.ref.get().then((docData) => {\n            if (docData.exists) {\n                available = false;\n                console.log('username not available')\n                return available;\n            } else {\n                console.log('username available')\n                available = true;\n                return available;\n            }\n        });\n    }\n\n    public async createUser(user) {\n        const newDocInfo = await this.firestore.collection('users').add({\n            username: user.username,\n            password: user.password,\n            email: user.email,\n            lists: [\n                {\n                    \"name\": \"24/7 List\",\n                    \"active\": false,\n                    \"items\": []\n                }\n            ]\n        });\n        let newUser = {\n            username: user.username,\n            id: newDocInfo.id,\n            lists: [\n                {\n                    \"name\": \"24/7 List\",\n                    \"active\": false,\n                    \"items\": []\n                }\n            ]\n        }\n        this.sessionService.setUser(newUser);\n        this.setUsernameLookup(newUser);\n    }\n\n    public getUserInfo(user) {\n        return this.firestore.collection('users', ref => ref.where('username', '==', user.username)).snapshotChanges();\n    }\n\n    public setUsernameLookup(user) {\n        this.firestore.collection('usernameLookup').doc(user.username).set({\n            UID: user.id\n        })\n    }\n\n    public addList(user, listName: string): boolean {\n        for (let i = 0; i < user.lists.length; i++) {\n            if (user.lists[i].name === listName) {\n                return false;\n            }\n        }\n        let item = {\n            \"name\": listName,\n            \"active\": false,\n            \"items\": []\n        }\n        this.sessionService.updateLists(item);\n        this.sessionService.setSelectedList(item);\n        this.sessionService.setSelectedIndex(user.lists.length-1);\n        let docRef = this.firestore.collection('users').doc(user.id);\n        docRef.update({\n            lists: firebase.firestore.FieldValue.arrayUnion(item)\n        });\n        return true;\n    }\n\n    public addItem(user, item: object) {\n        let docRef = this.firestore.collection('users').doc(user.id);\n        this.firestore.collection('users').doc(user.id).get().subscribe(res => {\n            let localLists = res.get('lists');\n            localLists[this.sessionService.getSelectedIndex()].items = localLists[this.sessionService.getSelectedIndex()].items.concat(item);\n            docRef.update({\n                lists: localLists\n            });\n            this.sessionService.updateSeledtedList(localLists, this.sessionService.getSelectedIndex())\n        });\n    }\n\n}","import { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { AngularFireModule } from '@angular/fire';\nimport { AngularFirestoreModule } from '@angular/fire/firestore';\nimport { environment } from '../environments/environment';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { LoginComponent } from './login/login.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { CookieService } from 'ngx-cookie-service';\n\nimport { ProgressBarComponent } from './components/progress-bar/progress-bar.component';\nimport { HomeComponent } from './home/home.component';\nimport { ListComponent } from './list/list.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    ProgressBarComponent,\n    HomeComponent,\n    ListComponent\n  ],\n  imports: [\n    AngularFireModule.initializeApp(environment.firebase),\n \t  AngularFirestoreModule,\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    MatSliderModule,\n    BrowserAnimationsModule\n  ],\n  providers: [CookieService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","<!-- Modal -->\n<div #modal class=\"arsenal-modal-container\">\n    <div class=\"arsenal-modal\">\n        <div class=\"arsenal-header-wrap\">\n            <h1 class=\"heading--large\">Add Item</h1>\n            <span (click)=\"cancelAddItem()\" class=\"material-icons arsenal-button--right a-fs--4em\">clear</span>\n            <label class=\"arsenal-label a-mt--20\">Item name</label>\n            <input class=\"arsenal-full-input\"\n                    type=\"text\"\n                    [(ngModel)]=\"newItemName\"\n                    placeholder=\"\">\n            <p class=\"arsenal-para--error a-mt--20\"></p>\n            <button (click)=\"createNewItem(newItemName)\" class=\"arsenal-button--primary a-mt--20\">Create</button>\n        </div>\n    </div>\n</div>\n\n<div class=\"arsenal-content a-mt--50\">\n    <button class=\"arsenal-back a-mb--20\" (click)=\"exitList()\">\n        <span class=\"material-icons list-icon list-icon--light\">chevron_left</span>\n        <span class=\"arsenal-para\">back</span>\n    </button>\n    <div class=\"list-header\">\n        <h1 class=\"heading--medium\">{{list.name}}</h1>\n        <div>\n            <span class=\"material-icons list-icon list-icon--dark list-icon--animate\">settings</span>\n            <span class=\"material-icons list-icon list-icon--dark\">add</span>\n        </div>\n    </div>\n    <div class=\"list\">\n        <div class=\"item\" *ngFor=\"let item of list.items; let i = index\">\n            <p>{{item.name}}</p>\n            <div class=\"item-action\">\n                <span [ngClass]=\"{'item-action--light': i%2==0, 'item-action--secondary': i%2==5}\" class=\"material-icons item-action--done list-icon--medium\">done</span>\n            </div>\n        </div>\n        <div class=\"item add\" (click)=\"addItemModal()\">\n            <p>Add item <span class=\"material-icons\">add</span></p>\n        </div>\n    </div>\n</div>\n","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { FirebaseService } from '../services/firebase.service';\nimport { SessionService } from '../services/session.service';\nimport { CookieService } from 'ngx-cookie-service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-list',\n  templateUrl: './list.component.html',\n  styleUrls: ['./list.component.css']\n})\nexport class ListComponent implements OnInit {\n\n  @ViewChild('modal') modal: ElementRef;\n\n  public list;\n  public user;\n  public newItemName: string = '';\n\n  constructor(\n    private firebaseService: FirebaseService,\n    private sessionService: SessionService,\n    private cookieService: CookieService,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n    this.user = this.sessionService.getUser();\n    this.list = this.user.selectedList;\n  }\n\n  public exitList() {\n    this.sessionService.unsetSelectedList();\n    this.router.navigateByUrl('/home');\n  }\n\n  public addItemModal() {\n    this.modal.nativeElement.style.display = 'flex';\n  }\n\n  public cancelAddItem() {\n    this.modal.nativeElement.style.display = 'none';\n  }\n\n  public createNewItem(name) {\n    let item = {\n      \"name\": name,\n      \"completed\": false\n    }\n    let user = this.sessionService.getUser();\n    this.firebaseService.addItem(user, item);\n    this.modal.nativeElement.style.display = 'none';\n    this.list.items = this.list.items.concat(item);\n  }\n}\n","<div class=\"arsenal-progress-bar-wrapper\">\n    <div [ngClass]=\"{'arsenal-progress-prefill': !stages[0].completed}\"></div>\n    <div class=\"arsenal-progress-bar-section\" *ngFor=\"let stage of stages\">\n        <div [ngClass]=\"{'arsenal-task-complete': stage.completed === true}\"></div>\n    </div>\n</div>\n<p *ngIf=\"!stages[stages.length-1].completed\" class=\"arsenal-para a-mt--5 a-mb--0\">Completed: {{completed}}/{{stages.length}}</p>\n<p *ngIf=\"stages[stages.length-1].completed\" class=\"arsenal-para a-mt--5 a-mb--0\">Completed!</p>\n","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-progress-bar',\n  templateUrl: './progress-bar.component.html',\n  styleUrls: ['./progress-bar.component.css']\n})\nexport class ProgressBarComponent implements OnInit {\n\n  @Input() stages: any;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  public get completed(): number {\n    let numCompleted = 0\n    this.stages.forEach(element => {\n      if (element.completed === true) {\n        numCompleted += 1;\n      }\n    });\n    return numCompleted;\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { HomeComponent } from './home/home.component';\nimport { ListComponent } from './list/list.component'\n\nconst routes: Routes = [\n  {\n    path: '', \n    component: LoginComponent\n  },\n  {\n    path: 'home',\n    component: HomeComponent\n  },\n  {\n    path: 'list',\n    component: ListComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit, ɵSWITCH_COMPILE_INJECTABLE__POST_R3__ } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FirebaseService } from '../services/firebase.service';\nimport { SessionService } from '../services/session.service';\nimport * as bcrypt from 'bcryptjs';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  // errors object\n  public errors = {\n    username: '',\n    password: '',\n    email: '',\n    confirmPassword: '',\n    student: '',\n    failedLogin: '',\n    siteFail: ''\n  }\n\n  // visual state \n  public isSignUp: boolean = false\n  public isLogin: boolean = false\n\n  // sign up\n  public tasks = Array(3).fill(false);\n  public sUsername: string = '';\n  public sPassword: string = '';\n  public sEmail: string = '';\n  public cPassword: string = '';\n  public usernameAvailability: boolean;\n  public usernameAvailabilityMsg: string = '';\n  public msgOptions = {\n    available: 'Username available!',\n    unavailable: 'Username is already taken!'\n  }\n  public isCompletedSignUp = false;\n\n  // sign in\n  public lUsername: string = '';\n  public lPassword: string = '';\n\n  // user objects\n  private newUser = {\n    username: '',\n    password: '',\n    email: '',\n    id: ''\n  }\n  private returningUser = {\n    username: '',\n    id: '',\n    lists: []\n  }\n\n  constructor(\n    private firebaseService: FirebaseService,\n    private sessionService: SessionService,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  // public checkUserInput(username: string): void {\n  //   // no display necessary for no input or 1 character usernames\n  //   if (username.length < 2) {\n  //     this.usernameAvailabilityMsg = '';\n  //     return\n  //   } else {\n  //     this.firebaseService.checkUsernameAvailability(username).then(res => {\n  //       this.usernameAvailability = res;\n  //       if (this.usernameAvailability) {\n  //         this.usernameAvailabilityMsg = this.msgOptions.available;\n  //       } else {\n  //         this.usernameAvailabilityMsg = this.msgOptions.unavailable;\n  //       }\n  //     });\n  //   }\n  // }\n\n  public signUp(): void {\n    this.sessionService.setUser(this.newUser);\n    this.firebaseService.createUser(this.newUser)\n    .then(\n      res => {\n        this.clearFields();\n        this.isCompletedSignUp = true;\n      },\n      error => {\n        this.errors.siteFail = \"Looks like we had trouble creating your account :( Please try again later!\";\n      }\n    )\n  }\n\n  private validateUsername(username: string): boolean {\n    // this.checkUsernameAvailability(username);\n    if (this.usernameAvailabilityMsg) {\n      this.errors.username = 'Looks like that username is taken. Try another? :)';\n      return false;\n    } else if (username === '') {\n      this.errors.username = 'Hold on there! We know you are excited but don\\'t forget to enter a username!';\n      return false;\n    } else if (username.length < 3) {\n      this.errors.username = 'Don\\'t be shy, usernames need to be three characters or more!';\n      return false;\n    } else {\n      this.usernameAvailabilityMsg = '';\n      return true;\n    }\n  }\n\n  private async checkUsernameAvailability(username: string): Promise<void> {\n    return await this.firebaseService.checkUsernameAvailability(username).then(res => {\n      this.usernameAvailability = res;\n      console.log(this.usernameAvailability);\n      if (!this.usernameAvailability) {\n        this.usernameAvailabilityMsg = this.msgOptions.unavailable;\n      }\n    });\n  }\n\n  private validatePassword(password: string): boolean {\n    if (password.length < 6) {\n      this.errors.password = 'Passwords should be at least 6 characters!';\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  private validateEmail(email: string): boolean {\n    if (/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(email)) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  public next(task: number): void {\n    if (task === 1) {\n      const isUsernameValid = this.validateUsername(this.sUsername);\n      console.log(isUsernameValid);\n      if (isUsernameValid) {\n        this.tasks[0] = true;\n        this.newUser.username = this.sUsername;\n      }\n    } else if (task === 2) {\n      const isPasswordValid = this.validatePassword(this.sPassword);\n      if (isPasswordValid) {\n        this.tasks[1] = true;\n        this.newUser.password = bcrypt.hashSync(this.sPassword, 10);\n      }\n    } else if (task === 3) {\n      const isEmailValid = this.validateEmail(this.sEmail);\n      if (isEmailValid) {\n        this.tasks[2] = true;\n        this.newUser.email = this.sEmail;\n        this.signUp();\n      } else {\n        this.errors.email = 'Please enter a valid email :P'\n        this.clearFields();\n      }\n    }\n  }\n\n  private clearFields(): void {\n    this.sUsername = '';\n    this.sPassword = '';\n    this.sEmail = '';\n\n    this.lUsername = '';\n    this.lPassword = '';\n\n    this.usernameAvailabilityMsg = '';\n\n    this.errors.username = '';\n    this.errors.password = '';\n    this.errors.confirmPassword = '';\n    this.errors.student = '';\n    this.errors.failedLogin = '';\n    this.errors.siteFail = '';\n  }\n\n  public back(): void {\n    this.isSignUp = false;\n    this.isLogin = false;\n    this.clearFields();\n  }\n\n  public async continue(): Promise<void> {\n    this.router.navigateByUrl('/home');\n  }\n\n  public login(): void {\n    this.returningUser.username = this.lUsername;\n    let pass;\n    this.firebaseService.getUserInfo(this.returningUser).subscribe(res => {\n      res.filter(x => {\n        pass = x.payload.doc.get('password');\n        this.returningUser.id = x.payload.doc.id;\n        this.returningUser.lists = x.payload.doc.get('lists');\n      });\n      if (bcrypt.compareSync(this.lPassword, pass)) {\n        this.sessionService.setUser(this.returningUser);\n        this.continue();\n      } else {\n        this.clearFields();\n        this.errors.failedLogin = 'Username or password is incorrect :( Try again?';\n      }\n    });\n  }\n\n}\n","<div class=\"login\">\n    <div class=\"arsenal-login-wrapper\">\n        <div class=\"arsenal-header-wrap\">\n            <h1 *ngIf=\"!isSignUp && !isLogin\" class=\"heading--large\">To-Done</h1>\n            <h1 *ngIf=\"isSignUp && !isCompletedSignUp\" class=\"heading--large\">Sign-Up</h1>\n            <h1 *ngIf=\"isCompletedSignUp\" class=\"heading--large\">All done!</h1>\n            <h1 *ngIf=\"isLogin\" class=\"heading--large\">Login</h1>\n            <span *ngIf=\"isSignUp || isLogin\" (click)=\"back()\" class=\"material-icons arsenal-button--right a-fs--4em\">clear</span>\n        </div>\n        <div *ngIf=\"!isSignUp && !isLogin\">\n            <button class=\"arsenal-button--primary a-mt--15\" (click)='isSignUp=true'>Sign Up</button>\n            <button class=\"arsenal-button--secondary a-mt--15\" (click)='isLogin=true'>Login</button>\n        </div>\n        <div *ngIf=\"isSignUp\">\n            <div *ngIf=\"!tasks[0]\" class=\"a-mb--20\">\n                <label class=\"arsenal-label a-mt--20 a-mb--20\">Let's start up your account! What username would you like?</label>\n                <div class=\"arsenal-inline-input-wrapper\">\n                        <input class=\"arsenal-inline-input\"\n                            type=\"text\"\n                            [(ngModel)]=\"sUsername\">\n                        <button (click)=\"next(1)\" class=\"arsenal-inline-button\">Next</button>\n                </div>\n                <p *ngIf=\"errors.username\" class=\"arsenal-para--error a-mt--10\">{{errors.username}}</p>\n                <p class=\"arsenal-para a-mt--20\">Requirements:</p>\n                <ul class=\"arsenal-form-requirements a-mb--20\">\n                        <li>Should be at least 3 characters with no spaces or special characters</li>\n                </ul>\n            </div>\n            <div *ngIf=\"tasks[0] && !tasks[1]\">\n                <label class=\"arsenal-label a-mt--20 a-mb--20\">Nice to meet you, <span class=\"a-fc--primary\">{{sUsername}}</span>! Enter a strong password for your account:</label>\n                <div class=\"arsenal-inline-input-wrapper\">\n                        <input class=\"arsenal-inline-input\"\n                            type=\"password\"\n                            [(ngModel)]=\"sPassword\">\n                        <button (click)=\"next(2)\" class=\"arsenal-inline-button\">Next</button>\n                </div>\n                <p *ngIf=\"errors.password\" class=\"arsenal-para--error a-mt--10\">{{errors.password}}</p>\n                <p class=\"arsenal-para a-mt--20\">Requirements:</p>\n                <ul class=\"arsenal-form-requirements a-mb--20\">\n                    <li>Should be at least 6 characters</li>\n                </ul>\n            </div>\n            <div *ngIf=\"tasks[1] && !tasks[2]\" class=\"a-mb--20\">\n                <label class=\"arsenal-label a-mt--20 a-mb--20\">What is a good email?</label>\n                <div class=\"arsenal-inline-input-wrapper\">\n                        <input class=\"arsenal-inline-input\"\n                            type=\"text\"\n                            [(ngModel)]=\"sEmail\">\n                        <button (click)=\"next(3)\" class=\"arsenal-inline-button\">Sign Up</button>\n                </div>\n                <p *ngIf=\"errors.email\" class=\"arsenal-para--error a-mt--10\">{{errors.email}}</p>\n                <p class=\"arsenal-para a-mt--20 a-mb--20\">We use your email for account recovery and app notificatons only. Read more in our Privacy Policy.</p>\n            </div>\n            <div *ngIf=\"isCompletedSignUp\">\n                <p class=\"arsenal-para a-mt--20\">That's it! Your account has been registered. Click the button below to begin turning your todo's, into done's</p>\n                <button (click)=\"continue()\" class=\"arsenal-button--primary a-mt--15 a-mb--20\">Get Started</button>\n            </div>\n            <app-progress-bar [stages]=\"tasks\"></app-progress-bar>\n        </div>\n        <div *ngIf=\"isLogin\">\n            <p *ngIf=\"errors.failedLogin\" class=\"arsenal-para--error a-mt--10\">{{errors.failedLogin}}</p>\n            <label class=\"arsenal-label a-mt--20\">Username</label>\n            <input class=\"arsenal-full-input\"\n                    type=\"text\"\n                    [(ngModel)]=\"lUsername\"\n                    placeholder=\"\">\n            <label class=\"arsenal-label a-mt--20\">Password</label>\n            <input class=\"arsenal-full-input\"\n                    type=\"password\"\n                    [(ngModel)]=\"lPassword\"\n                    placeholder=\"\">\n            <button class=\"arsenal-button--primary a-mt--20\" (click)='login()'>Login</button>\n        </div>\n    </div>    \n</div>\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}