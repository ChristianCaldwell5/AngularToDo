{"version":3,"sources":["webpack:///src/app/home/home.component.html","webpack:///src/app/home/home.component.ts","webpack:///src/environments/environment.ts","webpack:///src/app/services/session.service.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/services/firebase.service.ts","webpack:///src/app/app.module.ts","webpack:///src/app/list/list.component.html","webpack:///src/app/list/list.component.ts","webpack:///src/app/components/progress-bar/progress-bar.component.html","webpack:///src/app/components/progress-bar/progress-bar.component.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/login/login.component.ts","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["HomeComponent","firebaseService","sessionService","router","newListName","errors","listName","user","getUser","lists","listLocation","setSelectedIndex","setSelectedList","navigateByUrl","modal","nativeElement","style","display","addList","cancelCreate","finishCreate","createListModal","environment","production","firebase","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","SessionService","cookieService","activeUser","username","id","selectedList","selectedIndex","JSON","parse","sessionStorage","getItem","setItem","stringify","item","concat","index","list","selectdIndex","AppComponent","title","FirebaseService","firestore","newUsername","available","usernameRef","collection","doc","ref","get","then","docData","exists","console","log","add","password","email","newDocInfo","newUser","setUser","setUsernameLookup","where","snapshotChanges","set","UID","i","length","name","updateLists","docRef","update","FieldValue","arrayUnion","subscribe","res","localLists","getSelectedIndex","items","updateSeledtedList","AppModule","initializeApp","ListComponent","newItemName","unsetSelectedList","addItem","cancelAddItem","createNewItem","exitList","addItemModal","ProgressBarComponent","numCompleted","stages","forEach","element","completed","routes","path","component","AppRoutingModule","forRoot","LoginComponent","confirmPassword","student","failedLogin","siteFail","isSignUp","isLogin","tasks","Array","fill","sUsername","sPassword","sEmail","cPassword","usernameAvailabilityMsg","msgOptions","unavailable","isCompletedSignUp","lUsername","lPassword","returningUser","createUser","clearFields","error","checkUsernameAvailability","usernameAvailability","test","task","isUsernameValid","validateUsername","isPasswordValid","validatePassword","isEmailValid","validateEmail","signUp","pass","getUserInfo","filter","x","payload","bootstrapModule","err","webpackEmptyAsyncContext","req","Promise","resolve","e","Error","code","keys","module","exports"],"mappings":"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","file":"main-es5.js","sourcesContent":["<!-- Modal -->\n<div #modal class=\"arsenal-modal-container\">\n    <div class=\"arsenal-modal\">\n        <div class=\"arsenal-header-wrap\">\n            <h1 class=\"heading--large\">Create List</h1>\n            <span (click)=\"cancelCreate()\" class=\"material-icons arsenal-button--right a-fs--4em\">clear</span>\n            <label class=\"arsenal-label a-mt--20\">Name</label>\n            <input class=\"arsenal-full-input\"\n                    type=\"text\"\n                    [(ngModel)]=\"newListName\"\n                    placeholder=\"\">\n            <p *ngIf=\"errors.listName\" class=\"arsenal-para--error a-mt--20\">{{errors.listName}}</p>\n            <button (click)='finishCreate(user, newListName)' class=\"arsenal-button--primary a-mt--20\">Create</button>\n        </div>\n    </div>\n</div>\n\n<!-- Main view -->\n<div class=\"arsenal-content a-mt--50\">\n    <!-- <div class=\"arsenal-flex-container\">\n        <div id=\"recommended-wrapper\">\n            <div class=\"dashboard-card\">\n                <h1 class=\"heading--large\">Dashboard</h1>\n            </div>\n        </div>\n        <div id=\"profile-wrapper\">\n            <div class=\"dashboard-card\">\n                <h1 class=\"heading--large\">Profile</h1>\n            </div>\n        </div>\n    </div> -->\n    <!-- Show List -->\n    <div class=\"list-section\">\n        <div class=\"list-section-title\">\n            <h1 class=\"heading--medium\">Your List</h1>\n        </div>\n        <div class=\"list-container a-mt--15\">\n            <ng-container *ngFor=\"let list of lists; let i = index\">\n                <div class=\"list-card\" (click)=\"viewList(i)\">\n                    <div class=\"list-header\">\n                        <p class=\"heading--small\">{{list.name}}</p>\n                        <span class=\"material-icons list-add-icon\">add_circle</span>\n                    </div>\n                    <!-- No Items -->\n                    <p *ngIf='list.items.length == 0' class=\"list-peek a-mt--15\">No items in this list right now.</p>\n                    <p *ngIf='list.items.length == 0' class=\"a-mt--15\">Click this card to add a task!</p>\n                    <!-- Has Items -->\n                    <p *ngIf='list.items.length != 0' class=\"list-peek a-mt--15 a-mb--15\">Next up: {{list.items[0].name}}</p>\n                    <app-progress-bar *ngIf='list.items.length != 0' [stages]=\"list.items\"></app-progress-bar>\n                </div>\n            </ng-container>\n            <div class=\"list-card list-card--add\" (click)=\"createListModal()\">\n                <div class=\"list-add--row\">\n                    <div class=\"arsenal-divider\"></div>\n                    <span class=\"material-icons list-add--icon\">add_circle</span>\n                    <div class=\"arsenal-divider\"></div>\n                </div>\n                <p>New List</p>\n            </div>\n        </div>\n    </div>\n</div>\n","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { FirebaseService } from '../services/firebase.service';\nimport { SessionService } from '../services/session.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  @ViewChild('modal') modal: ElementRef;\n\n  public user;\n  public lists: Array<any>;\n\n  public newListName: string = '';\n\n  public errors = {\n    listName: ''\n  }\n\n  constructor(\n    private firebaseService: FirebaseService,\n    private sessionService: SessionService,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n    this.user = this.sessionService.getUser();\n    this.lists = this.user.lists;\n  }\n\n  public viewList(listLocation: number) {\n    this.sessionService.setSelectedIndex(listLocation);\n    this.sessionService.setSelectedList(this.lists[listLocation]);\n    this.router.navigateByUrl('/list');\n  }\n\n  public createListModal() {\n    this.modal.nativeElement.style.display = 'flex';\n  }\n\n  public cancelCreate() {\n    this.modal.nativeElement.style.display = 'none';\n    this.errors.listName = '';\n  }\n\n  public finishCreate(user, newListName) {\n    // add item to lists\n    if (this.firebaseService.addList(user, newListName)) {\n      this.errors.listName = '';\n      // update session user and list\n      this.user = this.sessionService.getUser();\n      this.lists = this.user.lists;\n      // view list\n      this.router.navigateByUrl('/list');\n    } else {\n      this.errors.listName = 'It looks like a list with this name already exists.'\n    }\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  firebase: {\n    apiKey: \"AIzaSyC-Ji7xLyBxb-b9xsdzV0Vay-qodqAPXg8\",\n    authDomain: \"angulartodo-21638.firebaseapp.com\",\n    projectId: \"angulartodo-21638\",\n    storageBucket: \"angulartodo-21638.appspot.com\",\n    messagingSenderId: \"13677214906\",\n    appId: \"1:13677214906:web:c9bee37b9beb504faf9683\"\n  }\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\nimport { CookieService } from 'ngx-cookie-service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SessionService {\n\n  private activeUser = {\n    username: \"\",\n    id: \"\",\n    lists: [],\n    selectedList: {},\n    selectedIndex: 0\n  };\n\n  constructor(\n    private cookieService: CookieService\n  ) { }\n\n  public getUser(): object {\n    if (!this.activeUser.username) {\n      this.activeUser = JSON.parse(sessionStorage.getItem(\"user\"));\n    }\n    return this.activeUser;\n  }\n\n  public setUser(user): void {\n    this.activeUser.username = user.username;\n    this.activeUser.id = user.id;\n    this.activeUser.lists = user.lists;\n    sessionStorage.setItem(\"user\", JSON.stringify(this.activeUser))\n    // this.cookieService.set('user', JSON.stringify(this.activeUser));\n  }\n\n  public updateLists(item): void {\n    this.activeUser.lists = this.activeUser.lists.concat(item);\n    sessionStorage.setItem(\"user\", JSON.stringify(this.activeUser))\n    // this.cookieService.set('user', JSON.stringify(this.activeUser));\n  }\n\n  public setSelectedIndex(index): void {\n    this.activeUser.selectedIndex = index;\n  }\n\n  public getSelectedIndex(): number {\n    return this.activeUser.selectedIndex;\n  }\n\n  public setSelectedList(list): void {\n    this.activeUser.selectedList = list;\n  }\n\n  public getSelectedList(): object {\n    return this.activeUser.selectedList;\n  }\n\n  public updateSeledtedList(lists, selectdIndex) {\n    this.activeUser.lists = lists;\n    this.activeUser.selectedList = this.activeUser.lists[selectdIndex];\n    sessionStorage.setItem(\"user\", JSON.stringify(this.activeUser))\n    // this.cookieService.set('user', JSON.stringify(this.activeUser));\n  }\n\n  public unsetSelectedList(): void {\n    this.activeUser.selectedList = {}\n  }\n\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'AngularToDo';\n}\n","<router-outlet></router-outlet>\n","import { Injectable } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/firestore';\nimport { Observable, Subject } from 'rxjs';\nimport firebase from 'firebase/app';\nimport { SessionService } from '../services/session.service';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class FirebaseService {\n\n    public hashedPass: string;\n    \n    constructor (\n        public firestore: AngularFirestore,\n        public sessionService: SessionService\n    ) {}\n\n    public async checkUsernameAvailability(newUsername) {\n        let available = false;\n        const usernameRef = this.firestore.collection('usernameLookup').doc(newUsername);\n        \n        return await usernameRef.ref.get().then((docData) => {\n            if (docData.exists) {\n                available = false;\n                console.log('username not available')\n                return available;\n            } else {\n                console.log('username available')\n                available = true;\n                return available;\n            }\n        });\n    }\n\n    public async createUser(user) {\n        const newDocInfo = await this.firestore.collection('users').add({\n            username: user.username,\n            password: user.password,\n            email: user.email,\n            lists: [\n                {\n                    \"name\": \"24/7 List\",\n                    \"active\": false,\n                    \"items\": []\n                }\n            ]\n        });\n        let newUser = {\n            username: user.username,\n            id: newDocInfo.id,\n            lists: [\n                {\n                    \"name\": \"24/7 List\",\n                    \"active\": false,\n                    \"items\": []\n                }\n            ]\n        }\n        this.sessionService.setUser(newUser);\n        this.setUsernameLookup(newUser);\n    }\n\n    public getUserInfo(user) {\n        return this.firestore.collection('users', ref => ref.where('username', '==', user.username)).snapshotChanges();\n    }\n\n    public setUsernameLookup(user) {\n        this.firestore.collection('usernameLookup').doc(user.username).set({\n            UID: user.id\n        })\n    }\n\n    public addList(user, listName: string): boolean {\n        for (let i = 0; i < user.lists.length; i++) {\n            if (user.lists[i].name === listName) {\n                return false;\n            }\n        }\n        let item = {\n            \"name\": listName,\n            \"active\": false,\n            \"items\": []\n        }\n        this.sessionService.updateLists(item);\n        this.sessionService.setSelectedList(item);\n        this.sessionService.setSelectedIndex(user.lists.length-1);\n        let docRef = this.firestore.collection('users').doc(user.id);\n        docRef.update({\n            lists: firebase.firestore.FieldValue.arrayUnion(item)\n        });\n        return true;\n    }\n\n    public addItem(user, item: object) {\n        let docRef = this.firestore.collection('users').doc(user.id);\n        this.firestore.collection('users').doc(user.id).get().subscribe(res => {\n            let localLists = res.get('lists');\n            localLists[this.sessionService.getSelectedIndex()].items = localLists[this.sessionService.getSelectedIndex()].items.concat(item);\n            docRef.update({\n                lists: localLists\n            });\n            this.sessionService.updateSeledtedList(localLists, this.sessionService.getSelectedIndex())\n        });\n    }\n\n}","import { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { AngularFireModule } from '@angular/fire';\nimport { AngularFirestoreModule } from '@angular/fire/firestore';\nimport { environment } from '../environments/environment';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { LoginComponent } from './login/login.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { CookieService } from 'ngx-cookie-service';\n\nimport { ProgressBarComponent } from './components/progress-bar/progress-bar.component';\nimport { HomeComponent } from './home/home.component';\nimport { ListComponent } from './list/list.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    ProgressBarComponent,\n    HomeComponent,\n    ListComponent\n  ],\n  imports: [\n    AngularFireModule.initializeApp(environment.firebase),\n \t  AngularFirestoreModule,\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    MatSliderModule,\n    BrowserAnimationsModule\n  ],\n  providers: [CookieService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","<!-- Modal -->\n<div #modal class=\"arsenal-modal-container\">\n    <div class=\"arsenal-modal\">\n        <div class=\"arsenal-header-wrap\">\n            <h1 class=\"heading--large\">Add Item</h1>\n            <span (click)=\"cancelAddItem()\" class=\"material-icons arsenal-button--right a-fs--4em\">clear</span>\n            <label class=\"arsenal-label a-mt--20\">Item name</label>\n            <input class=\"arsenal-full-input\"\n                    type=\"text\"\n                    [(ngModel)]=\"newItemName\"\n                    placeholder=\"\">\n            <p class=\"arsenal-para--error a-mt--20\"></p>\n            <button (click)=\"createNewItem(newItemName)\" class=\"arsenal-button--primary a-mt--20\">Create</button>\n        </div>\n    </div>\n</div>\n\n<div class=\"arsenal-content a-mt--50\">\n    <button class=\"arsenal-back a-mb--20\" (click)=\"exitList()\">\n        <span class=\"material-icons list-icon list-icon--light\">chevron_left</span>\n        <span class=\"arsenal-para\">back</span>\n    </button>\n    <div class=\"list-header\">\n        <h1 class=\"heading--medium\">{{list.name}}</h1>\n        <div>\n            <span class=\"material-icons list-icon list-icon--dark list-icon--animate\">settings</span>\n            <span class=\"material-icons list-icon list-icon--dark\">add</span>\n        </div>\n    </div>\n    <div class=\"list\">\n        <div class=\"item\" *ngFor=\"let item of list.items; let i = index\">\n            <p>{{item.name}}</p>\n            <div class=\"item-action\">\n                <span [ngClass]=\"{'item-action--light': i%2==0, 'item-action--secondary': i%2==5}\" class=\"material-icons item-action--done list-icon--medium\">done</span>\n            </div>\n        </div>\n        <div class=\"item add\" (click)=\"addItemModal()\">\n            <p>Add item <span class=\"material-icons\">add</span></p>\n        </div>\n    </div>\n</div>\n","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { FirebaseService } from '../services/firebase.service';\nimport { SessionService } from '../services/session.service';\nimport { CookieService } from 'ngx-cookie-service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-list',\n  templateUrl: './list.component.html',\n  styleUrls: ['./list.component.css']\n})\nexport class ListComponent implements OnInit {\n\n  @ViewChild('modal') modal: ElementRef;\n\n  public list;\n  public user;\n  public newItemName: string = '';\n\n  constructor(\n    private firebaseService: FirebaseService,\n    private sessionService: SessionService,\n    private cookieService: CookieService,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n    this.user = this.sessionService.getUser();\n    this.list = this.user.selectedList;\n  }\n\n  public exitList() {\n    this.sessionService.unsetSelectedList();\n    this.router.navigateByUrl('/home');\n  }\n\n  public addItemModal() {\n    this.modal.nativeElement.style.display = 'flex';\n  }\n\n  public cancelAddItem() {\n    this.modal.nativeElement.style.display = 'none';\n  }\n\n  public createNewItem(name) {\n    let item = {\n      \"name\": name,\n      \"completed\": false\n    }\n    let user = this.sessionService.getUser();\n    this.firebaseService.addItem(user, item);\n    this.modal.nativeElement.style.display = 'none';\n    this.list.items = this.list.items.concat(item);\n  }\n}\n","<div class=\"arsenal-progress-bar-wrapper\">\n    <div [ngClass]=\"{'arsenal-progress-prefill': !stages[0].completed}\"></div>\n    <div class=\"arsenal-progress-bar-section\" *ngFor=\"let stage of stages\">\n        <div [ngClass]=\"{'arsenal-task-complete': stage.completed === true}\"></div>\n    </div>\n</div>\n<p *ngIf=\"!stages[stages.length-1].completed\" class=\"arsenal-para a-mt--5 a-mb--0\">Completed: {{completed}}/{{stages.length}}</p>\n<p *ngIf=\"stages[stages.length-1].completed\" class=\"arsenal-para a-mt--5 a-mb--0\">Completed!</p>\n","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-progress-bar',\n  templateUrl: './progress-bar.component.html',\n  styleUrls: ['./progress-bar.component.css']\n})\nexport class ProgressBarComponent implements OnInit {\n\n  @Input() stages: any;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  public get completed(): number {\n    let numCompleted = 0\n    this.stages.forEach(element => {\n      if (element.completed === true) {\n        numCompleted += 1;\n      }\n    });\n    return numCompleted;\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { HomeComponent } from './home/home.component';\nimport { ListComponent } from './list/list.component'\n\nconst routes: Routes = [\n  {\n    path: '', \n    component: LoginComponent\n  },\n  {\n    path: 'home',\n    component: HomeComponent\n  },\n  {\n    path: 'list',\n    component: ListComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","<div class=\"login\">\n    <div class=\"arsenal-login-wrapper\">\n        <div class=\"arsenal-header-wrap\">\n            <h1 *ngIf=\"!isSignUp && !isLogin\" class=\"heading--large\">To-Done</h1>\n            <h1 *ngIf=\"isSignUp && !isCompletedSignUp\" class=\"heading--large\">Sign-Up</h1>\n            <h1 *ngIf=\"isCompletedSignUp\" class=\"heading--large\">All done!</h1>\n            <h1 *ngIf=\"isLogin\" class=\"heading--large\">Login</h1>\n            <span *ngIf=\"isSignUp || isLogin\" (click)=\"back()\" class=\"material-icons arsenal-button--right a-fs--4em\">clear</span>\n        </div>\n        <div *ngIf=\"!isSignUp && !isLogin\">\n            <button class=\"arsenal-button--primary a-mt--15\" (click)='isSignUp=true'>Sign Up</button>\n            <button class=\"arsenal-button--secondary a-mt--15\" (click)='isLogin=true'>Login</button>\n        </div>\n        <div *ngIf=\"isSignUp\">\n            <div *ngIf=\"!tasks[0]\" class=\"a-mb--20\">\n                <label class=\"arsenal-label a-mt--20 a-mb--20\">Let's start up your account! What username would you like?</label>\n                <div class=\"arsenal-inline-input-wrapper\">\n                        <input class=\"arsenal-inline-input\"\n                            type=\"text\"\n                            [(ngModel)]=\"sUsername\">\n                        <button (click)=\"next(1)\" class=\"arsenal-inline-button\">Next</button>\n                </div>\n                <p *ngIf=\"errors.username\" class=\"arsenal-para--error a-mt--10\">{{errors.username}}</p>\n                <p class=\"arsenal-para a-mt--20\">Requirements:</p>\n                <ul class=\"arsenal-form-requirements a-mb--20\">\n                        <li>Should be at least 3 characters with no spaces or special characters</li>\n                </ul>\n            </div>\n            <div *ngIf=\"tasks[0] && !tasks[1]\">\n                <label class=\"arsenal-label a-mt--20 a-mb--20\">Nice to meet you, <span class=\"a-fc--primary\">{{sUsername}}</span>! Enter a strong password for your account:</label>\n                <div class=\"arsenal-inline-input-wrapper\">\n                        <input class=\"arsenal-inline-input\"\n                            type=\"password\"\n                            [(ngModel)]=\"sPassword\">\n                        <button (click)=\"next(2)\" class=\"arsenal-inline-button\">Next</button>\n                </div>\n                <p *ngIf=\"errors.password\" class=\"arsenal-para--error a-mt--10\">{{errors.password}}</p>\n                <p class=\"arsenal-para a-mt--20\">Requirements:</p>\n                <ul class=\"arsenal-form-requirements a-mb--20\">\n                    <li>Should be at least 6 characters</li>\n                </ul>\n            </div>\n            <div *ngIf=\"tasks[1] && !tasks[2]\" class=\"a-mb--20\">\n                <label class=\"arsenal-label a-mt--20 a-mb--20\">What is a good email?</label>\n                <div class=\"arsenal-inline-input-wrapper\">\n                        <input class=\"arsenal-inline-input\"\n                            type=\"text\"\n                            [(ngModel)]=\"sEmail\">\n                        <button (click)=\"next(3)\" class=\"arsenal-inline-button\">Sign Up</button>\n                </div>\n                <p *ngIf=\"errors.email\" class=\"arsenal-para--error a-mt--10\">{{errors.email}}</p>\n                <p class=\"arsenal-para a-mt--20 a-mb--20\">We use your email for account recovery and app notificatons only. Read more in our Privacy Policy.</p>\n            </div>\n            <div *ngIf=\"isCompletedSignUp\">\n                <p class=\"arsenal-para a-mt--20\">That's it! Your account has been registered. Click the button below to begin turning your todo's, into done's</p>\n                <button (click)=\"continue()\" class=\"arsenal-button--primary a-mt--15 a-mb--20\">Get Started</button>\n            </div>\n            <app-progress-bar [stages]=\"tasks\"></app-progress-bar>\n        </div>\n        <div *ngIf=\"isLogin\">\n            <p *ngIf=\"errors.failedLogin\" class=\"arsenal-para--error a-mt--10\">{{errors.failedLogin}}</p>\n            <label class=\"arsenal-label a-mt--20\">Username</label>\n            <input class=\"arsenal-full-input\"\n                    type=\"text\"\n                    [(ngModel)]=\"lUsername\"\n                    placeholder=\"\">\n            <label class=\"arsenal-label a-mt--20\">Password</label>\n            <input class=\"arsenal-full-input\"\n                    type=\"password\"\n                    [(ngModel)]=\"lPassword\"\n                    placeholder=\"\">\n            <button class=\"arsenal-button--primary a-mt--20\" (click)='login()'>Login</button>\n        </div>\n    </div>    \n</div>\n","import { Component, OnInit, ɵSWITCH_COMPILE_INJECTABLE__POST_R3__ } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FirebaseService } from '../services/firebase.service';\nimport { SessionService } from '../services/session.service';\nimport * as bcrypt from 'bcryptjs';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  // errors object\n  public errors = {\n    username: '',\n    password: '',\n    email: '',\n    confirmPassword: '',\n    student: '',\n    failedLogin: '',\n    siteFail: ''\n  }\n\n  // visual state \n  public isSignUp: boolean = false\n  public isLogin: boolean = false\n\n  // sign up\n  public tasks = Array(3).fill(false);\n  public sUsername: string = '';\n  public sPassword: string = '';\n  public sEmail: string = '';\n  public cPassword: string = '';\n  public usernameAvailability: boolean;\n  public usernameAvailabilityMsg: string = '';\n  public msgOptions = {\n    available: 'Username available!',\n    unavailable: 'Username is already taken!'\n  }\n  public isCompletedSignUp = false;\n\n  // sign in\n  public lUsername: string = '';\n  public lPassword: string = '';\n\n  // user objects\n  private newUser = {\n    username: '',\n    password: '',\n    email: '',\n    id: ''\n  }\n  private returningUser = {\n    username: '',\n    id: '',\n    lists: []\n  }\n\n  constructor(\n    private firebaseService: FirebaseService,\n    private sessionService: SessionService,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  // public checkUserInput(username: string): void {\n  //   // no display necessary for no input or 1 character usernames\n  //   if (username.length < 2) {\n  //     this.usernameAvailabilityMsg = '';\n  //     return\n  //   } else {\n  //     this.firebaseService.checkUsernameAvailability(username).then(res => {\n  //       this.usernameAvailability = res;\n  //       if (this.usernameAvailability) {\n  //         this.usernameAvailabilityMsg = this.msgOptions.available;\n  //       } else {\n  //         this.usernameAvailabilityMsg = this.msgOptions.unavailable;\n  //       }\n  //     });\n  //   }\n  // }\n\n  public signUp(): void {\n    this.sessionService.setUser(this.newUser);\n    this.firebaseService.createUser(this.newUser)\n    .then(\n      res => {\n        this.clearFields();\n        this.isCompletedSignUp = true;\n      },\n      error => {\n        this.errors.siteFail = \"Looks like we had trouble creating your account :( Please try again later!\";\n      }\n    )\n  }\n\n  private validateUsername(username: string): boolean {\n    // this.checkUsernameAvailability(username);\n    if (this.usernameAvailabilityMsg) {\n      this.errors.username = 'Looks like that username is taken. Try another? :)';\n      return false;\n    } else if (username === '') {\n      this.errors.username = 'Hold on there! We know you are excited but don\\'t forget to enter a username!';\n      return false;\n    } else if (username.length < 3) {\n      this.errors.username = 'Don\\'t be shy, usernames need to be three characters or more!';\n      return false;\n    } else {\n      this.usernameAvailabilityMsg = '';\n      return true;\n    }\n  }\n\n  private async checkUsernameAvailability(username: string): Promise<void> {\n    return await this.firebaseService.checkUsernameAvailability(username).then(res => {\n      this.usernameAvailability = res;\n      console.log(this.usernameAvailability);\n      if (!this.usernameAvailability) {\n        this.usernameAvailabilityMsg = this.msgOptions.unavailable;\n      }\n    });\n  }\n\n  private validatePassword(password: string): boolean {\n    if (password.length < 6) {\n      this.errors.password = 'Passwords should be at least 6 characters!';\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  private validateEmail(email: string): boolean {\n    if (/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(email)) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  public next(task: number): void {\n    if (task === 1) {\n      const isUsernameValid = this.validateUsername(this.sUsername);\n      console.log(isUsernameValid);\n      if (isUsernameValid) {\n        this.tasks[0] = true;\n        this.newUser.username = this.sUsername;\n      }\n    } else if (task === 2) {\n      const isPasswordValid = this.validatePassword(this.sPassword);\n      if (isPasswordValid) {\n        this.tasks[1] = true;\n        this.newUser.password = bcrypt.hashSync(this.sPassword, 10);\n      }\n    } else if (task === 3) {\n      const isEmailValid = this.validateEmail(this.sEmail);\n      if (isEmailValid) {\n        this.tasks[2] = true;\n        this.newUser.email = this.sEmail;\n        this.signUp();\n      } else {\n        this.errors.email = 'Please enter a valid email :P'\n        this.clearFields();\n      }\n    }\n  }\n\n  private clearFields(): void {\n    this.sUsername = '';\n    this.sPassword = '';\n    this.sEmail = '';\n\n    this.lUsername = '';\n    this.lPassword = '';\n\n    this.usernameAvailabilityMsg = '';\n\n    this.errors.username = '';\n    this.errors.password = '';\n    this.errors.confirmPassword = '';\n    this.errors.student = '';\n    this.errors.failedLogin = '';\n    this.errors.siteFail = '';\n  }\n\n  public back(): void {\n    this.isSignUp = false;\n    this.isLogin = false;\n    this.clearFields();\n  }\n\n  public async continue(): Promise<void> {\n    this.router.navigateByUrl('/home');\n  }\n\n  public login(): void {\n    this.returningUser.username = this.lUsername;\n    let pass;\n    this.firebaseService.getUserInfo(this.returningUser).subscribe(res => {\n      res.filter(x => {\n        pass = x.payload.doc.get('password');\n        this.returningUser.id = x.payload.doc.id;\n        this.returningUser.lists = x.payload.doc.get('lists');\n      });\n      if (bcrypt.compareSync(this.lPassword, pass)) {\n        this.sessionService.setUser(this.returningUser);\n        this.continue();\n      } else {\n        this.clearFields();\n        this.errors.failedLogin = 'Username or password is incorrect :( Try again?';\n      }\n    });\n  }\n\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}