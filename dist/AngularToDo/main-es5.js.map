{"version":3,"sources":["webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/environments/environment.ts","webpack:///src/app/services/session.service.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/services/firebase.service.ts","webpack:///src/app/app.module.ts","webpack:///src/app/components/progress-bar/progress-bar.component.html","webpack:///src/app/components/progress-bar/progress-bar.component.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["HomeComponent","environment","production","firebase","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","SessionService","AppComponent","title","FirebaseService","firestore","newUsername","available","usernameRef","collection","doc","ref","get","then","docData","exists","console","log","user","add","username","password","student","isStudent","newDocInfo","newUser","id","setUsernameLookup","set","UID","AppModule","initializeApp","ProgressBarComponent","numCompleted","stages","forEach","element","routes","path","component","AppRoutingModule","forRoot","LoginComponent","firebaseService","sessionService","router","errors","confirmPassword","failedLogin","siteFail","isSignUp","isLogin","tasks","Array","fill","sUsername","sPassword","cPassword","studentOptions","usernameAvailabilityMsg","msgOptions","unavailable","isCompletedSignUp","lUsername","lPassword","returningUser","createUser","res","clearFields","activeUser","error","length","task","isUsernameValid","validateUsername","isPasswordValid","validatePassword","isStudentValid","validateStudent","signUp","bootstrapModule","err","webpackEmptyAsyncContext","req","Promise","resolve","e","Error","code","keys","module","exports"],"mappings":"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","file":"main-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>home works!</p>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  firebase: {\n    apiKey: \"AIzaSyC-Ji7xLyBxb-b9xsdzV0Vay-qodqAPXg8\",\n    authDomain: \"angulartodo-21638.firebaseapp.com\",\n    projectId: \"angulartodo-21638\",\n    storageBucket: \"angulartodo-21638.appspot.com\",\n    messagingSenderId: \"13677214906\",\n    appId: \"1:13677214906:web:c9bee37b9beb504faf9683\"\n  }\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SessionService {\n\n  public activeUser: string;\n\n  constructor() { }\n\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'AngularToDo';\n}\n","<router-outlet></router-outlet>\n","import { Injectable } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/firestore';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class FirebaseService {\n    \n    constructor (\n        public firestore: AngularFirestore\n    ) {}\n\n    public checkUsernameAvailability(newUsername): Promise<boolean> {\n        let available = false\n        const usernameRef = this.firestore.collection('usernameLookup').doc(newUsername);\n        \n        return usernameRef.ref.get().then((docData) => {\n            if (docData.exists) {\n                available = false;\n                console.log('username not available')\n                return available\n            } else {\n                console.log('username available')\n                available = true;\n                return available\n            }\n        });\n    }\n\n    public async createUser(user) {\n        const newDocInfo = await this.firestore.collection('users').add({\n            username: user.username,\n            password: user.password,\n            student: user.isStudent\n        });\n        let newUser = {\n            username: user.username,\n            id: newDocInfo.id\n        }\n        this.setUsernameLookup(newUser)\n    }\n\n    public setUsernameLookup(user) {\n        this.firestore.collection('usernameLookup').doc(user.username).set({\n            UID: user.id\n        })\n    }\n\n}","import { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { AngularFireModule } from '@angular/fire';\nimport { AngularFirestoreModule } from '@angular/fire/firestore';\nimport { environment } from '../environments/environment';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { LoginComponent } from './login/login.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ProgressBarComponent } from './components/progress-bar/progress-bar.component';\nimport { HomeComponent } from './home/home.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    ProgressBarComponent,\n    HomeComponent\n  ],\n  imports: [\n    AngularFireModule.initializeApp(environment.firebase),\n \t  AngularFirestoreModule,\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    MatSliderModule,\n    BrowserAnimationsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","<div class=\"arsenal-progress-bar-wrapper\">\n    <div [ngClass]=\"{'arsenal-progress-prefill': !stages[0]}\"></div>\n    <div class=\"arsenal-progress-bar-section\" *ngFor=\"let stage of stages\">\n        <div [ngClass]=\"{'arsenal-task-complete': stage === true}\"></div>\n    </div>\n</div>\n<p *ngIf=\"!stages[stages.length-1]\" class=\"arsenal-para a-mt--10 a-mb--0\">Completed: {{completed}}/{{stages.length}}</p>\n<p *ngIf=\"stages[stages.length-1]\" class=\"arsenal-para a-mt--10 a-mb--0\">Completed!</p>\n","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-progress-bar',\n  templateUrl: './progress-bar.component.html',\n  styleUrls: ['./progress-bar.component.css']\n})\nexport class ProgressBarComponent implements OnInit {\n\n  @Input() stages: any;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  public get completed(): number {\n    let numCompleted = 0\n    this.stages.forEach(element => {\n      if (element === true) {\n        numCompleted += 1;\n      }\n    });\n    return numCompleted;\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { HomeComponent } from './home/home.component'\n\nconst routes: Routes = [\n  {\n    path: '', \n    component: LoginComponent\n  },\n  {\n    path: 'home',\n    component: HomeComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FirebaseService } from '../services/firebase.service';\nimport { SessionService } from '../services/session.service';\nimport * as bcrypt from 'bcryptjs';\nimport { error } from 'selenium-webdriver';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  // errors object\n  public errors = {\n    username: '',\n    password: '',\n    confirmPassword: '',\n    student: '',\n    failedLogin: '',\n    siteFail: ''\n  }\n\n  // visual state \n  public isSignUp: boolean = false\n  public isLogin: boolean = false\n\n  // sign up\n  public tasks = Array(3).fill(false);\n  public sUsername: string = '';\n  public sPassword: string = '';\n  public cPassword: string = '';\n  public studentOptions: Array<string> = [\n    'Select an option',\n    'Yes',\n    'No'\n  ];\n  public student: string = this.studentOptions[0];\n  public usernameAvailability: boolean;\n  public usernameAvailabilityMsg: string = '';\n  public msgOptions = {\n    available: 'Username available!',\n    unavailable: 'Username is already taken!'\n  }\n  public isCompletedSignUp = false;\n\n  // sign in\n  public lUsername: string = '';\n  public lPassword: string = '';\n\n  // user objects\n  private newUser = {\n    username: '',\n    password: '',\n    isStudent: false\n  }\n  private returningUser = {\n    username: '',\n    password: ''\n  }\n\n  constructor(\n    private firebaseService: FirebaseService,\n    private sessionService: SessionService,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  // public checkUserInput(username: string): void {\n  //   // no display necessary for no input or 1 character usernames\n  //   if (username.length < 2) {\n  //     this.usernameAvailabilityMsg = '';\n  //     return\n  //   } else {\n  //     this.firebaseService.checkUsernameAvailability(username).then(res => {\n  //       this.usernameAvailability = res;\n  //       if (this.usernameAvailability) {\n  //         this.usernameAvailabilityMsg = this.msgOptions.available;\n  //       } else {\n  //         this.usernameAvailabilityMsg = this.msgOptions.unavailable;\n  //       }\n  //     });\n  //   }\n  // }\n\n  public signUp(): void {\n    this.firebaseService.createUser(this.newUser)\n    .then(\n      res => {\n        this.clearFields();\n        this.isCompletedSignUp = true;\n        this.sessionService.activeUser = this.newUser.username;\n        console.log(this.sessionService.activeUser);\n      },\n      error => {\n        this.errors.siteFail = \"Looks like we had trouble creating your account :( Please try again later!\";\n      }\n    )\n  }\n\n  private validateUsername(username: string): boolean {\n    // if (this.usernameAvailabilityMsg === this.msgOptions.unavailable) {\n    //   return false;\n    // }\n    if (username === '') {\n      this.errors.username = 'Hold on there! We know you are excited but don\\'t forget to enter a username!';\n      return false;\n    } else if (username.length < 3) {\n      this.errors.username = 'Don\\'t be shy, usernames need to be three characters or more!';\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  private validatePassword(password: string): boolean {\n    if (password.length < 6) {\n      this.errors.password = 'Passwords should be at least 6 characters!';\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  private validateStudent(student: string): boolean {\n    if (student === 'Select an option') {\n      this.errors.student = 'Please select yes or no :)';\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  public next(task: number): void {\n    if (task === 1) {\n      const isUsernameValid = this.validateUsername(this.sUsername);\n      if (isUsernameValid) {\n        this.tasks[0] = true;\n        this.newUser.username = this.sUsername;\n      }\n      return;\n    } else if (task === 2) {\n      const isPasswordValid = this.validatePassword(this.sPassword);\n      if (isPasswordValid) {\n        this.tasks[1] = true;\n        this.newUser.password === this.sPassword\n        this.newUser.password = bcrypt.hashSync(this.newUser.password, 10);\n      }\n      return;\n    } else if (task === 3) {\n      const isStudentValid = this.validateStudent(this.student);\n      if (isStudentValid) {\n        this.tasks[2] = true;\n        this.newUser.isStudent = true ? this.student === \"Yes\" : false;\n        this.signUp();\n      }\n      return\n    }\n  }\n\n  private clearFields(): void {\n    this.sUsername = '';\n    this.sPassword = '';\n    this.cPassword = '';\n    this.sUsername = '';\n    this.sPassword = '';\n    this.usernameAvailabilityMsg = '';\n    this.student = this.studentOptions[0];\n\n    this.errors.username = '';\n    this.errors.password = '';\n    this.errors.confirmPassword = '';\n    this.errors.student = '';\n    this.errors.failedLogin = '';\n    this.errors.siteFail = '';\n  }\n\n  public back(): void {\n    this.isSignUp = false;\n    this.isLogin = false;\n    this.clearFields();\n  }\n\n}\n","<div class=\"arsenal-login-wrapper\">\n    <div class=\"arsenal-header-wrap\">\n        <h1 *ngIf=\"!isSignUp && !isLogin\" class=\"heading--large\">To-Done</h1>\n        <h1 *ngIf=\"isSignUp && !isCompletedSignUp\" class=\"heading--large\">Sign-Up</h1>\n        <h1 *ngIf=\"isCompletedSignUp\" class=\"heading--large\">All done!</h1>\n        <h1 *ngIf=\"isLogin\" class=\"heading--large\">Login</h1>\n        <span *ngIf=\"isSignUp || isLogin\" (click)=\"back()\" class=\"material-icons arsenal-button--right a-fs--4em\">clear</span>\n    </div>\n    <div *ngIf=\"!isSignUp && !isLogin\">\n        <button class=\"arsenal-button--primary a-mt--15\" (click)='isSignUp=true'>Sign Up</button>\n        <button class=\"arsenal-button--secondary a-mt--15\" (click)='isLogin=true'>Login</button>\n    </div>\n    <div *ngIf=\"isSignUp\">\n        <div *ngIf=\"!tasks[0]\" class=\"a-mb--20\">\n            <label class=\"arsenal-label a-mt--20 a-mb--20\">Let's start up your account! What username would you like?</label>\n            <div class=\"arsenal-inline-input-wrapper\">\n                    <input class=\"arsenal-inline-input\"\n                        type=\"text\"\n                        [(ngModel)]=\"sUsername\">\n                    <button (click)=\"next(1)\" class=\"arsenal-inline-button\">Next</button>\n            </div>\n            <p *ngIf=\"errors.username\" class=\"arsenal-para--error a-mt--10\">{{errors.username}}</p>\n            <p class=\"arsenal-para a-mt--20\">Requirements:</p>\n            <ul class=\"arsenal-form-requirements a-mb--20\">\n                    <li>Should be at least 3 characters with no spaces or special characters</li>\n            </ul>\n        </div>\n        <div *ngIf=\"tasks[0] && !tasks[1]\">\n            <label class=\"arsenal-label a-mt--20 a-mb--20\">Nice to meet you, <span class=\"a-fc--primary\">{{sUsername}}</span>! Enter a strong password for your account:</label>\n            <div class=\"arsenal-inline-input-wrapper\">\n                    <input class=\"arsenal-inline-input\"\n                        type=\"password\"\n                        [(ngModel)]=\"sPassword\">\n                    <button (click)=\"next(2)\" class=\"arsenal-inline-button\">Next</button>\n            </div>\n            <p *ngIf=\"errors.password\" class=\"arsenal-para--error a-mt--10\">{{errors.password}}</p>\n            <p class=\"arsenal-para a-mt--20\">Requirements:</p>\n            <ul class=\"arsenal-form-requirements a-mb--20\">\n                <li>Should be at least 6 characters</li>\n            </ul>\n        </div>\n        <div *ngIf=\"tasks[1] && !tasks[2]\">\n            <label class=\"arsenal-label a-mt--20 a-mb--20\">Are you a student?</label>\n            <div class=\"arsenal-inline-input-wrapper a-mb--20\">\n                <select class=\"arsenal-select\"\n                        [(ngModel)]=\"student\">\n                    <option *ngFor=\"let option of studentOptions\">{{option}}</option>\n                </select>\n                <button (click)=\"next(3)\" class=\"arsenal-inline-button\">Sign Up</button>\n            </div>\n            <p *ngIf=\"errors.student\" class=\"arsenal-para--error a-mt--10\">{{errors.student}}</p>\n            <p class=\"arsenal-para a-mt--20 a-mb--20\">Why? If a student, we will provide additional school related labels to organize your to-do list!</p>\n        </div>\n        <div *ngIf=\"isCompletedSignUp\">\n            <p class=\"arsenal-para a-mt--20\">That's it! Your account has been registered. Click the button below to begin turning your todo's, into done's</p>\n            <button (click)=\"signIn()\" class=\"arsenal-button--primary a-mt--15 a-mb--20\">Get Started</button>\n        </div>\n        <app-progress-bar [stages]=\"tasks\"></app-progress-bar>\n    </div>\n    <div *ngIf=\"isLogin\">\n        <label class=\"arsenal-label a-mt--20\">Username</label>\n        <input class=\"arsenal-input\"\n                type=\"text\"\n                [(ngModel)]=\"lUsername\"\n                placeholder=\"\">\n        <label class=\"arsenal-label a-mt--20\">Password</label>\n        <input class=\"arsenal-input\"\n                type=\"password\"\n                [(ngModel)]=\"lPassword\"\n                placeholder=\"\">\n        <button class=\"arsenal-button--primary a-mt--20\" (click)='login()'>Login</button>\n    </div>\n</div>\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}